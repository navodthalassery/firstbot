(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * @module metronical.proto
     */
    function n(value) {
        return new _n(value);
    }
    exports.n = n;
    class _n {
        constructor(_value = 0) {
            this._value = _value;
            this.value = this._value;
        }
        toBool() {
            if (this.value === 0) {
                return false;
            }
            return true;
        }
        random(min, max) {
            if (isNaN(min) || isNaN(max)) {
                throw "Error: Only numbers are accepted as arguments.";
            }
            this.value = Math.floor(Math.random() * (parseInt(max.toString(), 10) - parseInt(min.toString(), 10) + 1) + parseInt(min.toString(), 10));
            return this;
        }
        toNumber() {
            return this.value;
        }
    }
});
//# sourceMappingURL=numbers.js.map